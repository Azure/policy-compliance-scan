/// <reference types="node" />
import { ListArtifactsResponse, QueryArtifactResponse } from './internal-contracts';
import { IHttpClientResponse } from '@actions/http-client/interfaces';
import { HttpClient } from '@actions/http-client';
import { DownloadItem } from './internal-download-specification';
/**
 * Gets a list of all artifacts that are in a specific container
 */
export declare function listArtifacts(): Promise<ListArtifactsResponse>;
/**
 * Fetches a set of container items that describe the contents of an artifact
 * @param artifactName the name of the artifact
 * @param containerUrl the artifact container URL for the run
 */
export declare function getContainerItems(artifactName: string, containerUrl: string): Promise<QueryArtifactResponse>;
/**
 * Concurrently downloads all the files that are part of an artifact
 * @param downloadItems information about what items to download and where to save them
 */
export declare function downloadSingleArtifact(downloadItems: DownloadItem[]): Promise<void>;
/**
 * Downloads an individual file
 * @param client http client that will be used to make the necessary calls
 * @param artifactLocation origin location where a file will be downloaded from
 * @param downloadPath destination location for the file being downloaded
 */
export declare function downloadIndividualFile(client: HttpClient, artifactLocation: string, downloadPath: string): Promise<void>;
export declare function pipeResponseToStream(response: IHttpClientResponse, stream: NodeJS.WritableStream): Promise<void>;
